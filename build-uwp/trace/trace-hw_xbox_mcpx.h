/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_HW_XBOX_MCPX_GENERATED_TRACERS_H
#define TRACE_HW_XBOX_MCPX_GENERATED_TRACERS_H

#include "trace/control.h"

extern TraceEvent _TRACE_MCPX_APU_METHOD_EVENT;
extern TraceEvent _TRACE_MCPX_APU_REG_READ_EVENT;
extern TraceEvent _TRACE_MCPX_APU_REG_WRITE_EVENT;
extern uint16_t _TRACE_MCPX_APU_METHOD_DSTATE;
extern uint16_t _TRACE_MCPX_APU_REG_READ_DSTATE;
extern uint16_t _TRACE_MCPX_APU_REG_WRITE_DSTATE;
#define TRACE_MCPX_APU_METHOD_ENABLED 1
#define TRACE_MCPX_APU_REG_READ_ENABLED 1
#define TRACE_MCPX_APU_REG_WRITE_ENABLED 1
#include "qemu/log-for-trace.h"
#include "qemu/error-report.h"


#define TRACE_MCPX_APU_METHOD_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_MCPX_APU_METHOD) || \
    false)

static inline void _nocheck__trace_mcpx_apu_method(uint32_t addr, uint32_t parameter)
{
    if (trace_event_get_state(TRACE_MCPX_APU_METHOD) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 4 "C:/Users/seski/source/repos/xemu-uwp/hw/xbox/mcpx/trace-events"
            qemu_log("%d@%zu.%06zu:mcpx_apu_method " "0x%04"PRIx32" 0x%"PRIx32 "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, parameter);
#line 37 "C:/Users/seski/source/repos/xemu-uwp/build/trace/trace-hw_xbox_mcpx.h"
        } else {
#line 4 "C:/Users/seski/source/repos/xemu-uwp/hw/xbox/mcpx/trace-events"
            qemu_log("mcpx_apu_method " "0x%04"PRIx32" 0x%"PRIx32 "\n", addr, parameter);
#line 41 "C:/Users/seski/source/repos/xemu-uwp/build/trace/trace-hw_xbox_mcpx.h"
        }
    }
}

static inline void trace_mcpx_apu_method(uint32_t addr, uint32_t parameter)
{
    if (true) {
        _nocheck__trace_mcpx_apu_method(addr, parameter);
    }
}

#define TRACE_MCPX_APU_REG_READ_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_MCPX_APU_REG_READ) || \
    false)

static inline void _nocheck__trace_mcpx_apu_reg_read(uint32_t addr, unsigned int size, uint64_t val)
{
    if (trace_event_get_state(TRACE_MCPX_APU_REG_READ) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 5 "C:/Users/seski/source/repos/xemu-uwp/hw/xbox/mcpx/trace-events"
            qemu_log("%d@%zu.%06zu:mcpx_apu_reg_read " "addr 0x%"PRIx32" size %d val 0x%"PRIx64 "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, size, val);
#line 68 "C:/Users/seski/source/repos/xemu-uwp/build/trace/trace-hw_xbox_mcpx.h"
        } else {
#line 5 "C:/Users/seski/source/repos/xemu-uwp/hw/xbox/mcpx/trace-events"
            qemu_log("mcpx_apu_reg_read " "addr 0x%"PRIx32" size %d val 0x%"PRIx64 "\n", addr, size, val);
#line 72 "C:/Users/seski/source/repos/xemu-uwp/build/trace/trace-hw_xbox_mcpx.h"
        }
    }
}

static inline void trace_mcpx_apu_reg_read(uint32_t addr, unsigned int size, uint64_t val)
{
    if (true) {
        _nocheck__trace_mcpx_apu_reg_read(addr, size, val);
    }
}

#define TRACE_MCPX_APU_REG_WRITE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_MCPX_APU_REG_WRITE) || \
    false)

static inline void _nocheck__trace_mcpx_apu_reg_write(uint32_t addr, unsigned int size, uint64_t val)
{
    if (trace_event_get_state(TRACE_MCPX_APU_REG_WRITE) && qemu_loglevel_mask(LOG_TRACE)) {
        if (message_with_timestamp) {
            struct timeval _now;
            gettimeofday(&_now, NULL);
#line 6 "C:/Users/seski/source/repos/xemu-uwp/hw/xbox/mcpx/trace-events"
            qemu_log("%d@%zu.%06zu:mcpx_apu_reg_write " "addr 0x%"PRIx32" size %d val 0x%"PRIx64 "\n",
                     qemu_get_thread_id(),
                     (size_t)_now.tv_sec, (size_t)_now.tv_usec
                     , addr, size, val);
#line 99 "C:/Users/seski/source/repos/xemu-uwp/build/trace/trace-hw_xbox_mcpx.h"
        } else {
#line 6 "C:/Users/seski/source/repos/xemu-uwp/hw/xbox/mcpx/trace-events"
            qemu_log("mcpx_apu_reg_write " "addr 0x%"PRIx32" size %d val 0x%"PRIx64 "\n", addr, size, val);
#line 103 "C:/Users/seski/source/repos/xemu-uwp/build/trace/trace-hw_xbox_mcpx.h"
        }
    }
}

static inline void trace_mcpx_apu_reg_write(uint32_t addr, unsigned int size, uint64_t val)
{
    if (true) {
        _nocheck__trace_mcpx_apu_reg_write(addr, size, val);
    }
}
#endif /* TRACE_HW_XBOX_MCPX_GENERATED_TRACERS_H */
